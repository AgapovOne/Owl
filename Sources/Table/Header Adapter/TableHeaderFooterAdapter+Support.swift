//
//  TableHeaderFooterAdapter+Support.swift
//  FlowKit2
//
//  Created by dan on 02/04/2019.
//  Copyright Â© 2019 FlowKit2. All rights reserved.
//

import UIKit

public extension TableHeaderFooterAdapter {
    
    // MARK: - TableSection.HeaderFooterEvent -
    
    // Object generated by a single `TableSection` and related to header/footer events.
    struct HeaderFooterEvent {
        
        // `true` if event is related to an header, `false` if related to a footer.
        let isHeader: Bool
        
        // Header/footer view instance class.
        private(set) var view: View?
        
        // Header/footer section index.
        private(set) var section: Int
        
        internal init(header: Bool, view: UIView?, at section: Int) {
            self.isHeader = header
            self.view = view as? View
            self.section = section
        }
        
    }
    
    // MARK: - HeaderFooterEventsSubscriber -
    
    // This call is the entry point to setup actions for events generated for `TableSection` related to header/footer.
    struct HeaderFooterEventsSubscriber {
        
        public var dequeue: ((HeaderFooterEvent) -> Void)? = nil
        
        public var height: ((HeaderFooterEvent) -> CGFloat)? = nil
        public var estimatedHeight: ((HeaderFooterEvent) -> CGFloat)? = nil
        
        public var willDisplay: ((HeaderFooterEvent) -> Void)? = nil
        public var didDisplay: ((HeaderFooterEvent) -> Void)? = nil
        public var endDisplay: ((HeaderFooterEvent) -> Void)? = nil
        
        internal init() { }
    }
    
}

public enum TableSectionEvents: Int {
    case dequeue
    case headerHeight
    case footerHeight
    case estHeaderHeight
    case estFooterHeight
    case endDisplay
    case willDisplay
}
